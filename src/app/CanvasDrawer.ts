export class CanvasDrawer {  static BORDER: number = 2;   //the border on all four sides of the canvas.  static ROWS: number = 6;     //the number of rows on our board  static COLUMNS: number = 7;  //the number of columns on our board  static CELL_PADDING: number = 3;  static drawCell(canvas, x, y, state) {    console.log('drawing', canvas, x, y, state);    const cellWidth = ((canvas.width - 2 * this.BORDER) / this.COLUMNS);    const cellHeight =  ((canvas.height - 2 * this.BORDER) / this.ROWS);    const radius = (Math.min(cellWidth, cellHeight) / 2.0) - this.CELL_PADDING;    const xRect = this.BORDER + x * cellWidth;    const yRect = this.BORDER + y * cellHeight;    const xRectCenter = xRect + (cellWidth / 2.0);    const yRectCenter = yRect + (cellHeight / 2.0);    const ctx = canvas.getContext('2d');    ctx.lineWidth = 2;    ctx.strokeStyle = "#086788";    ctx.strokeRect (xRect, yRect, cellWidth, cellHeight);    if (state === 1 || state === 2) {      if (1 === state) {        ctx.fillStyle = "#DD1C1A"; //red      } else {        ctx.fillStyle = "#f6f600"; //yellow      }      const path = new Path2D();      path.arc(xRectCenter, yRectCenter, radius, 0, 2 * Math.PI);      ctx.fill(path);    }  }}